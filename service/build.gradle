plugins {
	id 'bio.terra.profile.java-spring-conventions'
	id 'de.undercouch.download'
	id 'com.google.cloud.tools.jib'

	id 'com.gorylenko.gradle-git-properties' version '2.4.2'
	id 'org.sonarqube' version '5.0.0.4638'
	id "au.com.dius.pact" version "4.3.19"

}

apply from: 'generators.gradle'
apply from: 'publishing.gradle'
apply from: 'dependencies.gradle'

test {
	systemProperties['pact.rootDir'] = "$buildDir/pacts"
	systemProperties['pact.provider.version'] = "$project.version"
}
sonarqube {
	properties {
		property "sonar.projectName", "terra-billing-profile-manager"
		property "sonar.projectKey", "DataBiosphere_terra-billing-profile-manager"
		property "sonar.organization", "broad-databiosphere"
		property "sonar.host.url", "https://sonarcloud.io"
		property "sonar.sources", "src/main/java"
	}
}

tasks.register("pactTests", Test) {
	useJUnitPlatform {
		includeTags "pact-test"
	}
	testLogging {
		showStandardStreams = true
	}
}

tasks.register("verifyPacts", Test) {
	useJUnitPlatform {
		includeTags "provider-test"
	}
	testLogging {
		showStandardStreams = true
	}
	outputs.upToDateWhen { false } // always run this task even if it's up to date

	systemProperty 'pact.provider.version', System.getenv('PACT_PROVIDER_VERSION')
	systemProperty 'pact.provider.branch', System.getenv('PACT_PROVIDER_BRANCH')
	systemProperty 'pact.verifier.publishResults', true
	systemProperty 'pactbroker.host', System.getenv('PACT_BROKER_URL')
	systemProperty 'pactbroker.auth.username', System.getenv('PACT_BROKER_USERNAME')
	systemProperty 'pactbroker.auth.password', System.getenv('PACT_BROKER_PASSWORD')
	systemProperty 'pactbroker.scheme', 'https'
}
