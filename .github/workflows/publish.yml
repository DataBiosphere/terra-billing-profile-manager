name: Publish and deploy
on: workflow_dispatch

env:
  SERVICE_NAME: ${{ github.event.repository.name }}
  GOOGLE_PROJECT: broad-dsp-gcr-public

jobs:
  publish-job:
    # only publish on new tag
    #if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: v1-${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            v1-${{ runner.os }}-gradle-

      - name: Parse tag
        id: tag
        run: echo ::set-output name=tag::$(git describe --tags)

      # TODO publish client

      - name: Auth to GCR
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCR_PUBLISH_KEY_B64 }}
      - name: Explicitly auth Docker for GCR
        run: gcloud auth configure-docker --quiet

      - name: Construct docker image name and tag
        id: image-name
        run: echo ::set-output name=name::gcr.io/${GOOGLE_PROJECT}/${SERVICE_NAME}:${{ steps.tag.outputs.tag }}

      # TODO add google cloud profiler

      - name: Build image locally with jib
        run: |
          ./gradlew --build-cache :service:jibDockerBuild \
          --image=${{ steps.image-name.outputs.name }} \
          -Djib.console=plain

      - name: Run Trivy vulnerability scanner
        # Link to the github location of the action https://github.com/broadinstitute/dsp-appsec-trivy-action
        uses: broadinstitute/dsp-appsec-trivy-action@v1
        with:
          image: ${{ steps.image-name.outputs.name }}

      - name: Push GCR image
        run: docker push ${{ steps.image-name.outputs.name }}

    # TODO dispatch notification to terra-helmfile once a chart is setup
#
#      - name: Notify slack on failure
#        uses: broadinstitute/action-slack@v3.8.0
#        if: failure()
#        env:
#          SLACK_WEBHOOK_URL: ${{ secrets.BPM_SLACK_WEBHOOK }}
#        with:
#          status: ${{ job.status }}
#          author_name: Publish to dev
#          fields: job
#          text: 'Publish failed :sadpanda:'
