plugins {
    id 'idea'
    id 'jacoco'
    id 'java'

    id 'com.diffplug.spotless'
    id 'com.github.spotbugs'
    id 'org.hidetake.swagger.generator'

    id 'org.sonarqube' version "3.3"
}

boolean isCiServer = System.getenv().containsKey("CI")

if (!isCiServer) {
    tasks.withType(JavaExec).configureEach {
        systemProperty 'spring.profiles.include', 'human-readable-logging'
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    maven {
        // Terra proxy for maven central
        url 'https://broadinstitute.jfrog.io/broadinstitute/maven-central/'
    }
    mavenCentral()
    maven {
        url 'https://broadinstitute.jfrog.io/broadinstitute/libs-release/'
    }
    maven {
        url 'https://broadinstitute.jfrog.io/broadinstitute/libs-snapshot-local/'
    }
    //mavenLocal()
}

dependencies {
    compileOnly "com.google.code.findbugs:annotations:3.0.1"
    implementation 'io.swagger.core.v3:swagger-annotations:2.1.12'
    swaggerCodegen 'io.swagger.codegen.v3:swagger-codegen-cli:3.0.31'

    implementation 'org.slf4j:slf4j-api:1.7.35'

    testImplementation 'ch.qos.logback:logback-classic:1.2.10'
    testImplementation 'org.hamcrest:hamcrest:2.2'
}

// https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement
ext['spring-framework.version'] = '5.3.18'

// Modify the standard :test task to only include unit-tagged tests.
tasks.named('test') {
    useJUnitPlatform() {
        includeTags 'unit'
    }
}

version = gradle.releaseVersion
group = 'bio.terra'

spotless {
    java {
        targetExclude "${buildDir}/**"
        targetExclude "**/swagger-code/**"
        googleJavaFormat()
    }
}

// Run spotless check when running in github actions, otherwise run spotless apply.
build {
    if (isCiServer) {
        dependsOn(spotlessCheck)
    } else {
        dependsOn(spotlessApply)
    }
}

// Spotbugs configuration
spotbugs {
    reportLevel = 'high'
    effort = 'max'
}
spotbugsMain {
    reports {
        sarif {
            enabled = true
        }
    }
}

sonarqube {
    properties {
        property "sonar.projectName", "terra-billing-profile-manager"
        property "sonar.projectKey", "DataBiosphere_terra-billing-profile-manager"
        property "sonar.organization", "broad-databiosphere"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.sources", "src/main/java"
    }
}

jacocoTestReport {
    reports {
        // sonarqube requires XML coverage output to upload coverage data
        xml.required = true
    }
}
